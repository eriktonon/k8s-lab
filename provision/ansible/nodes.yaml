---
- hosts: all
  become: true
  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: set user vagrant
      shell: |
          usermod -aG docker vagrant
    - name: docker compose
      shell: |
          curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
    - name: Garantindo /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
      with_items:
        - 172.10.10.100 master.labk8s.corp.br
        - 172.10.10.101 master2.labk8s.corp.br
        - 172.10.10.102 master3.labk8s.corp.br
        - 172.10.10.103 node1.labk8s.corp.br
        - 172.10.10.104 node2.labk8s.corp.br
        - 172.10.10.105 node3.labk8s.corp.br

    - name: Instalando pacotes de dependencias
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - unzip
        - python3
        - python3-pip
        - software-properties-common
        - vim
        - telnet
        - git
        - python-netaddr
        - snap
        - snapd
        update_cache: yes
        
    - name: Criando o arquivo get-pip.py
      copy:
        src: files/get-pip.py
        dest: /tmp
        mode: 0644

    - name: Atualiza o pip com Python 3
      shell: python3 get-pip.py
      args:
        chdir: /tmp

    - name: Atualiza o timezone
      shell: timedatectl set-timezone America/Sao_Paulo
      args:

    - name: Criando o arquivo prepare.sh
      copy:
        src: files/prepareCluster.sh
        dest: /tmp
        mode: 0644
    - name: instala kubernets dependencias
      shell: sh prepareCluster.sh
      args:
        chdir: /tmp